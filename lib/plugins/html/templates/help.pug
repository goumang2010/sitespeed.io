extends ./layout.pug

block content

    h2(id='overallScore') 总体分数
    p 平均组合性能表现, 是 Coach中综合可用性与最佳实践的分数. 如果该分数为100表示完美，不需要再进行修改。

    h2(id='performanceScore') 性能分数
    p coach计算页面与性能最佳实践的接近程度 查看全部&nbsp;
      a(href='#performanceAdvice') 建议列表
      | .

    h2(id='accessibilityScore') 可用性分数
    p 确保所有人可以进入并使用你的站点. 参考以下链接了解更多&nbsp;
      a(href='https://github.com/sitespeedio/coach/issues/new') help out&nbsp;
      | . 通过以下链接了解如何提高可用性&nbsp;
      a(href='https://www.marcozehe.de/2015/12/14/the-web-accessibility-basics/') here
      | .

    h2(id='bestPracticeScore') Web最佳实践分数
    p 与Web最佳实践接近程度. 确保页面能被搜索引擎索引, 有良好的url结构。 阅读全部&nbsp;
      a(href='#bestPracticeAdvice') the advice
      | .

    h2(id='performanceAdvice') 性能建议
    each advice, adviceKey in coach.data.coach.pageSummary.advice.performance.adviceList
      h5(id=adviceKey) #{advice.title} (#{adviceKey})
      p #{advice.description}

    h2(id='bestPracticeAdvice') 最佳实践建议
    each advice, adviceKey in coach.data.coach.pageSummary.advice.bestpractice.adviceList
      h5(id=adviceKey) #{advice.title} (#{adviceKey})
      p #{advice.description}

    h2(id='accessibilityAdvice') 可用性建议
    each advice, adviceKey in coach.data.coach.pageSummary.advice.accessibility.adviceList
      h5(id=adviceKey) #{advice.title} (#{adviceKey})
      p #{advice.description}

    h2(id='timingMetrics') 计时

    h5(id='backEndTime') 后端用时
    p 服务器生成页面及网络传输页面所用时间.通过导航计时API中的定义计算: responseStart - navigationStart

    h5(id='frontEndTime') 前端用时
    p 浏览器解析及创建页面所用的时间. 通过导航计时API中的定义计算:  loadEventStart - responseEnd

    h5(id='domContentLoadedTime') DOM内容加载计时
    p 解析文档、 执行延迟和被解析插入的脚本所耗时间，包括从用户位置到服务器的网络时间. 通过导航计时API中的定义计算: domContentLoadedEventStart - navigationStart

    h5(id='domInteractiveTime') DOM交互时间
    p 浏览器解析文档所用的时间, 包括从用户位置到服务器的网络时间. 通过导航计时API中的定义计算: domInteractive - navigationStart

    h5(id='domainLookupTime') 域名解析计时
    p DNS查询所用的时间. 通过导航计时API中的定义计算: domainLookupEnd - domainLookupStart

    h5(id='pageDownloadTime') 页面下载计时
    p 下载页面所用时间 ( HTML). 通过导航计时API中的定义计算: responseEnd - responseStart

    h5(id='pageLoadTime') 页面加载计时
    p 页面加载所用时间, 从页面视图初始化 (e.g., 点击页面链接)到在浏览器中加载完成. 注意: 这仅仅和某些页面相关, 取决于页面如何构建. 通过导航计时API中的定义计算: loadEventStart - navigationStart

    h5(id='redirectionTime') 重定向计时
    p 重定向所用时间. 通过导航计时API中的定义计算: fetchStart - navigationStart

    h5(id='serverConnectionTime') 服务器连接计时
    p 连接服务器所用时间. 通过导航计时API中的定义计算: connectEnd - connectStart

    h5(id='firstPaint') 首次绘制
    p 发生在屏幕上首次绘制的时候. 如果浏览器支持这项指标 (现在只有Chrome支持), 则使用它.

    h5(id='fullyLoaded') 完整加载
    p 所有资源都已下载的时候. 通过资源计时API计算 API.

    h5(id='speedIndex') 速度指数
    p 速度指数是页面可见部分被展示的平均时间. 以毫秒表示并且与视口大小相关 。它由 Pat Meenan 创建 可通过以下连接查看完整文档&nbsp;
      a(href='https://sites.google.com/a/webpagetest.org/docs/using-webpagetest/metrics/speed-index') here
      | .

    h5(id='rumSpeedIndex') RUM-速度指数
    p  Pat Meenan 创建的一个浏览器版本， 使用资源计时来进行速度指数测量计算 。它和速度指数一样并不完美，但是是一个好的开始.
